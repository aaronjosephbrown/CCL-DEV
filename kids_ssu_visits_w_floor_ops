DROP PROGRAM kids_ssu_visits_w_floor_ops GO
CREATE PROGRAM kids_ssu_visits_w_floor_ops
 
/*****************************************************************************
 
Author:           Aaron J. Brown
 
Date Written:     02/28/2024
 
PPM:              ######
 
Source file name: kids_ssu_visits_w_floor_ops.prg
 
Object name:      kids_ssu_visits_w_floor_ops
 
Program purpose:  MPLS Day Surgery Discharge Date Report
 
Executing from:   Ops Job
 
*******************************************************************************
 
Mod Date       By              PPM    Comment
 
--- ---------- -------------- ------ ------------------------------------------
 
001 02/28/2024 Aaron J. Brown 192954 Initial Release
 
******************************************************************************/
 
PROMPT "Output to File/Printer/MINE" = MINE
 
WITH OUTDEV
 
;ops job setup
RECORD reply( 
	1 ops_event = vc
	1 status_data
    	2 status = c1
    	2 subeventstatus[1]
      		3 OperationName = c25
      		3 OperationStatus = c1
      		3 TargetObjectName = c25
      		3 TargetObjectValue = vc
     )
SET reply->status_data->status = "Z"
 
SET OUTPATIENTINABED_CD = uar_get_code_by("DISPLAYKEY", 71, "OUTPATIENTINABED")
SET DAYSURGERY_CD = uar_get_code_by("DISPLAYKEY", 71, "DAYSURGERY")
SET OBSERVATION_CD = uar_get_code_by("DISPLAYKEY", 71, "OSERVATION")
 
SET NURSEUNIT_CD = uar_get_code_by("MEANING", 220, "NURSEUNIT")
SET AMBULATORY_CD = uar_get_code_by("MEANING", 220, "AMBULATORY")
 
FREE RECORD data
 
RECORD data (
	1 cnt = i4
	1 qual[*]
		2 person_alias = vc
		2 encntr_alias = vc
		2 name = vc
		2 encntr_type = vc
		2 room = vc
		2 unit = vc
		2 reg_dt_tm = dq
		2 disch_dt_tm = dq
)
 
SELECT DISTINCT INTO "NL:"
 
FROM
	ENCOUNTER   E
	, PERSON_ALIAS   P
	, PERSON   PE
	, ENCNTR_ALIAS   EA
 
PLAN E WHERE E.REG_DT_TM BETWEEN CNVTDATETIME(CURDATE -190,0) AND CNVTDATETIME(curdate, 235959)         
	AND E.ENCNTR_TYPE_CD IN (OUTPATIENTINABED_CD, DAYSURGERY_CD, OBSERVATION_CD)
	AND E.LOC_FACILITY_CD = VALUE(UAR_GET_CODE_BY("DISPLAYKEY", 220, "MINNEAPOLIS")) 
	AND E.LOCATION_CD NOT IN (NURSEUNIT_CD, AMBULATORY_CD)
	AND E.ACTIVE_IND = 1
JOIN PE WHERE E.PERSON_ID = PE.PERSON_ID AND PE.ACTIVE_IND = 1 
JOIN P WHERE PE.PERSON_ID = P.PERSON_ID AND P.ALIAS_POOL_CD = 4044 AND P.ACTIVE_IND = 1
JOIN EA WHERE E.ENCNTR_ID = EA.ENCNTR_ID AND EA.ALIAS_POOL_CD = 4045 AND EA.ACTIVE_IND = 1
 
ORDER BY
	E.DISCH_DT_TM
	, EA.ALIAS
	, PE.NAME_FULL_FORMATTED
HEAD REPORT 
	X = 0
DETAIL
	X += 1
	CALL ALTERLIST(data->qual, X)
	data->qual[X].person_alias = P.ALIAS
	data->qual[X].encntr_alias = EA.ALIAS
	data->qual[X].name = PE.NAME_FULL_FORMATTED
	data->qual[X].encntr_type = UAR_GET_CODE_DISPLAY(E.ENCNTR_TYPE_CD)
	data->qual[X].room = UAR_GET_CODE_DISPLAY(E.LOC_ROOM_CD)
	data->qual[X].unit = UAR_GET_CODE_DISPLAY(E.LOC_NURSE_UNIT_CD)
	data->qual[X].reg_dt_tm = E.REG_DT_TM
	data->qual[X].disch_dt_tm = E.DISCH_DT_TM
FOOT REPORT
	data->cnt = X
WITH NOCOUNTER
 
SELECT INTO $OUTDEV
 
FROM (DUMMYT D WITH SEQ = data->cnt)
 
PLAN D WHERE data->cnt > 0
 
ORDER BY D.seq
 
HEAD REPORT
	P = 0
	P_COUNT = 1
	P_Total = 0
	X_POS = 0
	Y_POS = 30

	MRN_X = 10
	ENC_X = 60
	NAME_X = 120
	TYPE_X = 235
	UNIT_X = 335
	ROOM_X = 410
	REG_X = 470
	DISCH_X = 540
HEAD PAGE 
	CALL PRINT(CALCPOS(220, 0))         "{CPI/10}{FONT/4}{b}" "MPLS SSU VISIT W FLOOR","{endb}", ROW + 1
	C_DATE = format(curdate,"mm/dd/yyyy;;d")
	CALL PRINT(CALCPOS(540, 0))         "{CPI/10}{FONT/4}" C_DATE, ROW + 1
	CALL PRINT(CALCPOS(MRN_X,Y_POS))    "{CPI/10}{FONT/4}{b}" "MRN", ROW + 1
	CALL PRINT(CALCPOS(ENC_X,Y_POS))    "{CPI/10}{FONT/4}{b}" "FIN", ROW + 1
	CALL PRINT(CALCPOS(NAME_X,Y_POS))   "{CPI/10}{FONT/4}{b}" "NAME", ROW + 1
	CALL PRINT(CALCPOS(TYPE_X,Y_POS))   "{CPI/10}{FONT/4}{b}" "TYPE", ROW + 1
	CALL PRINT(CALCPOS(ROOM_X,Y_POS))   "{CPI/10}{FONT/4}{b}" "ROOM", ROW + 1
	CALL PRINT(CALCPOS(UNIT_X,Y_POS))   "{CPI/10}{FONT/4}{b}" "UNIT", ROW + 1
	CALL PRINT(CALCPOS(REG_X, Y_POS))   "{CPI/10}{FONT/4}{b}" "ADMIT", ROW + 1
	CALL PRINT(CALCPOS(DISCH_X, Y_POS)) "{CPI/10}{FONT/4}{b}" "DISCH", ROW + 1
	P_Total += 1
 
DETAIL
	PAGE_NUM = CONCAT("page ",trim(CNVTSTRING(P_COUNT))," of ",trim(CNVTSTRING(P_Total)))
	P += 1
	IF (P_COUNT)
		CALL PRINT(CALCPOS(540, 710)) PAGE_NUM, ROW + 1
	ENDIF
	If (P > 30)
		P_COUNT += 1, ROW + 1
		"{NP}", ROW + 1
		Y_POS = 30, ROW + 1
		BREAK
	ENDIF
	Y_POS += 21
	CALL PRINT(CALCPOS(MRN_X,Y_POS)) data->qual[D.seq].person_alias, ROW + 1
	CALL PRINT(CALCPOS(ENC_X, Y_POS)) data->qual[D.seq].encntr_alias, ROW + 1
	NAME = format(data->qual[D.seq].name, "##############;L") 
	CALL PRINT(CALCPOS(NAME_X,Y_POS)) NAME, ROW + 1
	CALL PRINT(CALCPOS(TYPE_X,Y_POS)) data->qual[D.seq].encntr_type, ROW + 1
	CALL PRINT(CALCPOS(ROOM_X,Y_POS)) data->qual[D.seq].room, ROW + 1
	CALL PRINT(CALCPOS(UNIT_X,Y_POS)) data->qual[D.seq].unit, ROW + 1
	REG_DT = format(data->qual[d.seq].reg_dt_tm, "mm/dd/yy;;q") 
	CALL PRINT(CALCPOS(REG_X,Y_POS)) REG_DT, ROW + 1
	DISCH_DT = format(data->qual[d.seq].disch_dt_tm, "mm/dd/yy;;q")
	CALL PRINT(CALCPOS(DISCH_X,Y_POS)) DISCH_DT, ROW + 1
FOOT PAGE
	P = 0, ROW + 1
WITH NOCOUNTER
	;,MAXCOL = 2500
	,MAXROW = 1
	,FORMFEED = NONE
	,DIO = POSTSCRIPT
	,FORMAT = variable
 
SET reply->status_data->status = "S"
 
END GO
